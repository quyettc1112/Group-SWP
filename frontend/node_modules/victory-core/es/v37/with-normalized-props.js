function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from "react";
import { useVictoryContext, withVictoryProvider } from "./victory-state";
export function withNormalizedProps(config, WrappedComponent) {
  WrappedComponent.displayName = config.displayName;
  var WithNormalizedProps = withVictoryProvider(function (props) {
    var normalizedProps = useVictoryContext(function (v) {
      return v;
    });
    return /*#__PURE__*/React.createElement(WrappedComponent, _extends({}, props, normalizedProps), props.children);
  });
  return Object.assign(WithNormalizedProps, {
    displayName: "WithNormalizedProps(".concat(config.displayName),
    defaultProps: config.defaultProps,
    propTypes: config.propTypes
  });
}